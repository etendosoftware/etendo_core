<?xml version="1.0" encoding="UTF-8" ?>
<!--
 *************************************************************************
 * The contents of this file are subject to the Openbravo  Public  License
 * Version  1.1  (the  "License"),  being   the  Mozilla   Public  License
 * Version 1.1  with a permitted attribution clause; you may not  use this
 * file except in compliance with the License. You  may  obtain  a copy of
 * the License at http://www.openbravo.com/legal/license.html
 * Software distributed under the License  is  distributed  on  an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
 * License for the specific  language  governing  rights  and  limitations
 * under the License.
 * The Original Code is Openbravo ERP.
 * The Initial Developer of the Original Code is Openbravo SLU
 * All portions are Copyright (C) 2001-2017 Openbravo SLU
 * All Rights Reserved.
 * Contributor(s):  ______________________________________.
 ************************************************************************
-->

<SqlClass name="ReportGeneralLedgerData" package="org.openbravo.erpCommon.ad_reports">
  <SqlClassComment></SqlClassComment>

  <SqlMethod name="select2" type="preparedStatement" return="scrollable">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        SELECT *
        FROM ( SELECT '0' AS RN1, C.* FROM (
          SELECT VALUE, NAME, DATEACCT,
              COALESCE(SUM(AMTACCTDR),0) AS AMTACCTDR, COALESCE(SUM(AMTACCTCR),0) AS AMTACCTCR, COALESCE(SUM(AMTACCTDR-AMTACCTCR),0) AS TOTAL,
              MAX(FACT_ACCT_ID) AS FACT_ACCT_ID,
              FACT_ACCT_GROUP_ID, ID, groupbyid, groupbyname,
              DESCRIPTION, ISDEBIT,
              0 AS TOTALACCTDR, 0 AS TOTALACCTCR, 0 AS TOTALACCTSUB,
              0 AS PREVIOUSDEBIT, 0 AS PREVIOUSCREDIT, 0 AS PREVIOUSTOTAL,
              0 AS FINALDEBIT, 0 AS FINALCREDIT, 0 AS FINALTOTAL,
              TO_CHAR(DATEACCT,'J') AS DATEACCTNUMBER,
              ? AS groupby, '' as bpid, '' as bpname, '' as pdid, '' as pdname, '' as pjid, '' as pjname, factaccttype
              , 0 AS AMTACCTDRPREVSUM, 0 AS AMTACCTCRPREVSUM
          FROM
            (SELECT FACT_ACCT.ACCTVALUE AS VALUE, COALESCE(ev_trl.NAME, ev.NAME) AS NAME,
                DATEACCT, AMTACCTDR, AMTACCTCR, FACT_ACCT_ID,
                FACT_ACCT_GROUP_ID, FACT_ACCT.ACCOUNT_ID AS ID, FACT_ACCT.DESCRIPTION,
                CASE ?
                  WHEN 'BPartner' THEN c_bpartner.c_bpartner_id
                  WHEN 'Product' THEN m_product.m_product_id
                  WHEN 'Project' THEN c_project.c_project_id
                  ELSE '' END AS groupbyid,
                CASE ?
                  WHEN 'BPartner' THEN (select to_char(name) from c_bpartner b where b.c_bpartner_id = c_bpartner.c_bpartner_id)
                  WHEN 'Product' THEN (select to_char(value || ' - ' || name) from m_product p where p.m_product_id = m_product.m_product_id)
                  WHEN 'Project' THEN (select to_char(value || ' - ' || name) from c_project pj where pj.c_project_id = c_project.c_project_id)
                  ELSE '' END AS groupbyname,
                CASE WHEN (AMTACCTDR > 0 AND AMTACCTCR = 0) OR (AMTACCTCR < 0 AND AMTACCTDR = 0) THEN 'Y' ELSE 'N' END AS ISDEBIT,
        CASE WHEN FACT_ACCT.FACTACCTTYPE = 'O' THEN 1 ELSE (CASE WHEN FACT_ACCT.FACTACCTTYPE = 'N' THEN 2 ELSE (CASE WHEN FACT_ACCT.FACTACCTTYPE = 'R' THEN 3 ELSE (CASE WHEN FACT_ACCT.FACTACCTTYPE = 'C' THEN 4 END) END) END) END AS FACTACCTTYPE
            FROM FACT_ACCT
              LEFT JOIN C_BPARTNER ON FACT_ACCT.C_BPARTNER_ID = C_BPARTNER.C_BPARTNER_ID
              LEFT JOIN M_PRODUCT ON FACT_ACCT.M_PRODUCT_ID = M_PRODUCT.M_PRODUCT_ID
              LEFT JOIN C_PROJECT ON FACT_ACCT.C_PROJECT_ID = C_PROJECT.C_PROJECT_ID
              LEFT JOIN c_elementvalue ev ON FACT_ACCT.ACCOUNT_ID = ev.c_elementvalue_id
              LEFT JOIN c_elementvalue_trl ev_trl ON ev.c_elementvalue_id = ev_trl.c_elementvalue_id AND ev_trl.ad_language = ?
            WHERE (?='Y' OR FACT_ACCT.ACCOUNT_ID IN (
                      SELECT c_elementvalue_id as name
                      FROM C_ELEMENTVALUE
                      WHERE value >= (  select value from c_elementvalue where c_elementvalue_id = ?)
                        and value <= (  select value from c_elementvalue where c_elementvalue_id = ?)
                        and c_elementvalue.ELEMENTLEVEL = 'S'
                    ))
              AND FACT_ACCT.AD_ORG_ID IN ('1')
              AND FACT_ACCT.AD_CLIENT_ID IN ('1')
              AND 1=1
              AND  FACT_ACCT.AD_ORG_ID IN ('2')
              AND 2=2
              AND 3=3) D
            WHERE 6=6
            GROUP BY groupbyname, groupbyid, VALUE, NAME, ID,
            DATEACCT, FACTACCTTYPE, FACT_ACCT_GROUP_ID, DESCRIPTION, ISDEBIT
            HAVING SUM(AMTACCTDR) - SUM(AMTACCTCR) <> 0
            ORDER  BY groupbyname, groupbyid, VALUE, NAME, ID,
            DATEACCT, FACTACCTTYPE, FACT_ACCT_GROUP_ID,  FACT_ACCT_ID, DESCRIPTION, ISDEBIT
          ) C
        ) B WHERE 1=1
      ]]></Sql>
    <Field name="rownum" value="count"/>
    <Parameter name="rownum" type="replace" optional="true" after="FROM ( SELECT " text="'0'" />
    <Parameter name="groupbytext"/>
    <Parameter name="groupby"/>
    <Parameter name="groupby"/>
    <Parameter name="adLanguage"/>
    <Parameter name="allaccounts"/>
    <Parameter name="accountFrom"/>
    <Parameter name="accountTo"/>
    <Parameter name="adUserOrg" type="replace" optional="true" after="AND FACT_ACCT.AD_ORG_ID IN (" text="'1'"/>
    <Parameter name="adUserClient" type="replace" optional="true" after="AND FACT_ACCT.AD_CLIENT_ID IN (" text="'1'"/>
    <Parameter name="dateBalanced" optional="true" after="AND 1=1"><![CDATA[AND (FACT_ACCT.DATEBALANCED IS NULL OR FACT_ACCT.DATEBALANCED > TO_DATE(?)) ]]></Parameter>
    <Parameter name="acctschema" optional="true" after="AND 1=1"><![CDATA[AND FACT_ACCT.C_ACCTSCHEMA_ID = ? ]]></Parameter>
    <Parameter name="parDateFrom2" optional="true" after="AND 1=1"><![CDATA[AND FACT_ACCT.DATEACCT >= TO_DATE(?) ]]></Parameter>
    <Parameter name="parDateTo2" optional="true" after="AND 1=1"><![CDATA[AND FACT_ACCT.DATEACCT < TO_DATE(?) ]]></Parameter>
    <Parameter name="org" type="replace" optional="true" after="AND  FACT_ACCT.AD_ORG_ID IN (" text="'2'"/>
    <Parameter name="cBpartnerId" optional="true" type="argument" after="AND 2=2"><![CDATA[ AND FACT_ACCT.C_BPARTNER_ID IN]]></Parameter>
    <Parameter name="mProductId" optional="true" type="argument" after="AND 2=2"><![CDATA[ AND FACT_ACCT.M_PRODUCT_ID IN]]></Parameter>
    <Parameter name="cProjectId" optional="true" type="argument" after="AND 2=2"><![CDATA[ AND FACT_ACCT.C_PROJECT_ID IN]]></Parameter>
    <Parameter name="paramAmtFrom" optional="true" after="3=3"><![CDATA[ AND (FACT_ACCT.AMTACCTDR + FACT_ACCT.AMTACCTCR)>=TO_NUMBER(?) ]]></Parameter>
    <Parameter name="paramAmtTo" optional="true" after="3=3"><![CDATA[ AND (FACT_ACCT.AMTACCTDR + FACT_ACCT.AMTACCTCR)<=TO_NUMBER(?) ]]></Parameter>
    <Parameter name="accountId" optional="true" after="WHERE 6=6"><![CDATA[AND ID = ? ]]></Parameter>
    <Parameter name="cBPartner" optional="true" after="WHERE 6=6"><![CDATA[AND groupbyid = ? ]]></Parameter>
    <Parameter name="pgLimit" type="argument" optional="true" after=",  FACT_ACCT_ID, DESCRIPTION, ISDEBIT"><![CDATA[ LIMIT ]]></Parameter>
    <Parameter name="oraLimit1" type="argument" optional="true" after=") C"><![CDATA[ WHERE ROWNUM <= ]]></Parameter>
    <Parameter name="oraLimit2" type="argument" optional="true" after="WHERE 1=1"><![CDATA[ AND RN1 BETWEEN ]]></Parameter>
    <Parameter name="factAcctId" optional="true" after="WHERE 1=1"><![CDATA[ and to_char(DATEACCT,'J')||FACTACCTTYPE||FACT_ACCT_GROUP_ID||FACT_ACCT_ID < ? ]]></Parameter>
  </SqlMethod>
  
  <SqlMethod name="select2sum" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        SELECT Coalesce(SUM(S.amtacctdr), 0) AS AMTACCTDR,
               Coalesce(SUM(S.amtacctcr), 0) AS AMTACCTCR
        FROM (
          SELECT *
          FROM ( SELECT '0' AS RN1, C.* FROM (
            SELECT VALUE, NAME, DATEACCT,
                COALESCE(SUM(AMTACCTDR),0) AS AMTACCTDR, COALESCE(SUM(AMTACCTCR),0) AS AMTACCTCR, COALESCE(SUM(AMTACCTDR-AMTACCTCR),0) AS TOTAL,
                MAX(FACT_ACCT_ID) AS FACT_ACCT_ID,
                FACT_ACCT_GROUP_ID, ID, groupbyid, groupbyname,
                DESCRIPTION, ISDEBIT,
                0 AS TOTALACCTDR, 0 AS TOTALACCTCR, 0 AS TOTALACCTSUB,
                0 AS PREVIOUSDEBIT, 0 AS PREVIOUSCREDIT, 0 AS PREVIOUSTOTAL,
                0 AS FINALDEBIT, 0 AS FINALCREDIT, 0 AS FINALTOTAL,
                TO_CHAR(DATEACCT,'J') AS DATEACCTNUMBER,
                ? AS groupby, '' as bpid, '' as bpname, '' as pdid, '' as pdname, '' as pjid, '' as pjname, factaccttype
                , 0 AS AMTACCTDRPREVSUM, 0 AS AMTACCTCRPREVSUM
            FROM
              (SELECT FACT_ACCT.ACCTVALUE AS VALUE, FACT_ACCT.ACCTDESCRIPTION AS NAME,
                  DATEACCT, AMTACCTDR, AMTACCTCR, FACT_ACCT_ID,
                  FACT_ACCT_GROUP_ID, FACT_ACCT.ACCOUNT_ID AS ID, FACT_ACCT.DESCRIPTION,
                  CASE ?
                    WHEN 'BPartner' THEN c_bpartner.c_bpartner_id
                    WHEN 'Product' THEN m_product.m_product_id
                    WHEN 'Project' THEN c_project.c_project_id
                    ELSE '' END AS groupbyid,
                  CASE ?
                    WHEN 'BPartner' THEN (select to_char(name) from c_bpartner b where b.c_bpartner_id = c_bpartner.c_bpartner_id)
                    WHEN 'Product' THEN (select to_char(value || ' - ' || name) from m_product p where p.m_product_id = m_product.m_product_id)
                    WHEN 'Project' THEN (select to_char(name) from c_project pj where pj.c_project_id = c_project.c_project_id)
                    ELSE '' END AS groupbyname,
                  CASE WHEN (AMTACCTDR > 0 AND AMTACCTCR = 0) OR (AMTACCTCR < 0 AND AMTACCTDR = 0) THEN 'Y' ELSE 'N' END AS ISDEBIT,
          CASE WHEN FACT_ACCT.FACTACCTTYPE = 'O' THEN 1 ELSE (CASE WHEN FACT_ACCT.FACTACCTTYPE = 'N' THEN 2 ELSE (CASE WHEN FACT_ACCT.FACTACCTTYPE = 'R' THEN 3 ELSE (CASE WHEN FACT_ACCT.FACTACCTTYPE = 'C' THEN 4 END) END) END) END AS FACTACCTTYPE
              FROM FACT_ACCT
                LEFT JOIN C_BPARTNER ON FACT_ACCT.C_BPARTNER_ID = C_BPARTNER.C_BPARTNER_ID
                LEFT JOIN M_PRODUCT ON FACT_ACCT.M_PRODUCT_ID = M_PRODUCT.M_PRODUCT_ID
                LEFT JOIN C_PROJECT ON FACT_ACCT.C_PROJECT_ID = C_PROJECT.C_PROJECT_ID
              WHERE (?='Y' OR FACT_ACCT.ACCOUNT_ID IN (
                        SELECT c_elementvalue_id as name
                        FROM C_ELEMENTVALUE
                        WHERE value >= (  select value from c_elementvalue where c_elementvalue_id = ?)
                          and value <= (  select value from c_elementvalue where c_elementvalue_id = ?)
                          and c_elementvalue.ELEMENTLEVEL = 'S'
                      ))
                AND FACT_ACCT.AD_ORG_ID IN ('1')
                AND FACT_ACCT.AD_CLIENT_ID IN ('1')
                AND 1=1
                AND  FACT_ACCT.AD_ORG_ID IN ('2')
                AND 2=2
                AND 3=3) D
              WHERE 6=6
              GROUP BY groupbyname, groupbyid, VALUE, NAME, ID,
              DATEACCT, FACTACCTTYPE, FACT_ACCT_GROUP_ID, DESCRIPTION, ISDEBIT
              HAVING SUM(AMTACCTDR) - SUM(AMTACCTCR) <> 0
              ORDER  BY groupbyname, groupbyid, VALUE, NAME, ID,
              DATEACCT, FACTACCTTYPE, FACT_ACCT_GROUP_ID,  FACT_ACCT_ID, DESCRIPTION, ISDEBIT
            ) C
          ) B WHERE 1=1) S
        WHERE S.id = ?
      ]]></Sql>
    <Field name="rownum" value="count"/>
    <Parameter name="rownum" type="replace" optional="true" after="FROM ( SELECT " text="'0'" />
    <Parameter name="groupbytext"/>
    <Parameter name="groupby"/>
    <Parameter name="groupby"/>
    <Parameter name="allaccounts"/>
    <Parameter name="accountFrom"/>
    <Parameter name="accountTo"/>
    <Parameter name="adUserOrg" type="replace" optional="true" after="AND FACT_ACCT.AD_ORG_ID IN (" text="'1'"/>
    <Parameter name="adUserClient" type="replace" optional="true" after="AND FACT_ACCT.AD_CLIENT_ID IN (" text="'1'"/>
    <Parameter name="acctschema" optional="true" after="AND 1=1"><![CDATA[AND FACT_ACCT.C_ACCTSCHEMA_ID = ? ]]></Parameter>
    <Parameter name="parDateFrom2" optional="true" after="AND 1=1"><![CDATA[AND FACT_ACCT.DATEACCT >= TO_DATE(?) ]]></Parameter>
    <Parameter name="parDateTo2" optional="true" after="AND 1=1"><![CDATA[AND FACT_ACCT.DATEACCT < TO_DATE(?) ]]></Parameter>
    <Parameter name="org" type="replace" optional="true" after="AND  FACT_ACCT.AD_ORG_ID IN (" text="'2'"/>
    <Parameter name="cBpartnerId" optional="true" type="argument" after="AND 2=2"><![CDATA[ AND FACT_ACCT.C_BPARTNER_ID IN]]></Parameter>
    <Parameter name="mProductId" optional="true" type="argument" after="AND 2=2"><![CDATA[ AND FACT_ACCT.M_PRODUCT_ID IN]]></Parameter>
    <Parameter name="cProjectId" optional="true" type="argument" after="AND 2=2"><![CDATA[ AND FACT_ACCT.C_PROJECT_ID IN]]></Parameter>
    <Parameter name="paramAmtFrom" optional="true" after="3=3"><![CDATA[ AND (FACT_ACCT.AMTACCTDR + FACT_ACCT.AMTACCTCR)>=TO_NUMBER(?) ]]></Parameter>
    <Parameter name="paramAmtTo" optional="true" after="3=3"><![CDATA[ AND (FACT_ACCT.AMTACCTDR + FACT_ACCT.AMTACCTCR)<=TO_NUMBER(?) ]]></Parameter>
    <Parameter name="accountId" optional="true" after="WHERE 6=6"><![CDATA[AND ID = ? ]]></Parameter>
    <Parameter name="cBPartner" optional="true" after="WHERE 6=6"><![CDATA[AND groupbyid = ? ]]></Parameter>
    <Parameter name="pgLimit" type="argument" optional="true" after=",  FACT_ACCT_ID, DESCRIPTION, ISDEBIT"><![CDATA[ LIMIT ]]></Parameter>
    <Parameter name="oraLimit1" type="argument" optional="true" after=") C"><![CDATA[ WHERE ROWNUM <= ]]></Parameter>
    <Parameter name="oraLimit2" type="argument" optional="true" after="WHERE 1=1"><![CDATA[ AND RN1 BETWEEN ]]></Parameter>
    <Parameter name="factAcctId" optional="true" after="WHERE 1=1"><![CDATA[ and to_char(DATEACCT,'J')||FACTACCTTYPE||FACT_ACCT_GROUP_ID||FACT_ACCT_ID < ? ]]></Parameter>
    <Parameter name="accountId2"/>
  </SqlMethod>

  <SqlMethod name="select2Total" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
        SELECT COALESCE(SUM(AMTACCTDR),0) AS AMTACCTDR, COALESCE(SUM(AMTACCTCR),0) AS AMTACCTCR
        FROM ( SELECT '0' AS RN1, C.* FROM (
          SELECT VALUE, NAME, DATEACCT,
          COALESCE(SUM(AMTACCTDR),0) AS AMTACCTDR, COALESCE(SUM(AMTACCTCR),0) AS AMTACCTCR,
              COALESCE(SUM(AMTACCTDR-AMTACCTCR),0) AS TOTAL,
              MAX(FACT_ACCT_ID) AS FACT_ACCT_ID,
              FACT_ACCT_GROUP_ID, ID, groupbyid, groupbyname,
              DESCRIPTION, ISDEBIT,
              0 AS TOTALACCTDR, 0 AS TOTALACCTCR, 0 AS TOTALACCTSUB,
              0 AS PREVIOUSDEBIT, 0 AS PREVIOUSCREDIT, 0 AS PREVIOUSTOTAL,
              0 AS FINALDEBIT, 0 AS FINALCREDIT, 0 AS FINALTOTAL,
              TO_CHAR(DATEACCT,'J') AS DATEACCTNUMBER,
              ? AS groupby, '' as bpid, '' as bpname, '' as pdid, '' as pdname, '' as pjid, '' as pjname, factaccttype
          FROM
            (SELECT FACT_ACCT.ACCTVALUE AS VALUE, FACT_ACCT.ACCTDESCRIPTION AS NAME,
                DATEACCT, AMTACCTDR, AMTACCTCR, FACT_ACCT_ID,
                FACT_ACCT_GROUP_ID, FACT_ACCT.ACCOUNT_ID AS ID, FACT_ACCT.DESCRIPTION,
                CASE ?
                  WHEN 'BPartner' THEN c_bpartner.c_bpartner_id
                  WHEN 'Product' THEN m_product.m_product_id
                  WHEN 'Project' THEN c_project.c_project_id
                  ELSE '' END AS groupbyid,
                CASE ?
                  WHEN 'BPartner' THEN (select to_char(name) from c_bpartner b where b.c_bpartner_id = c_bpartner.c_bpartner_id)
                  WHEN 'Product' THEN (select to_char(value || ' - ' || name) from m_product p where p.m_product_id = m_product.m_product_id)
                  WHEN 'Project' THEN (select to_char(value || ' - ' || name) from c_project pj where pj.c_project_id = c_project.c_project_id)
                  ELSE '' END AS groupbyname,
                CASE WHEN (AMTACCTDR > 0 AND AMTACCTCR = 0) OR (AMTACCTCR < 0 AND AMTACCTDR = 0) THEN 'Y' ELSE 'N' END AS ISDEBIT,
        CASE WHEN FACT_ACCT.FACTACCTTYPE = 'O' THEN 1 ELSE (CASE WHEN FACT_ACCT.FACTACCTTYPE = 'N' THEN 2 ELSE (CASE WHEN FACT_ACCT.FACTACCTTYPE = 'R' THEN 3 ELSE (CASE WHEN FACT_ACCT.FACTACCTTYPE = 'C' THEN 4 END) END) END) END AS FACTACCTTYPE
            FROM FACT_ACCT
              LEFT JOIN C_BPARTNER ON FACT_ACCT.C_BPARTNER_ID = C_BPARTNER.C_BPARTNER_ID
              LEFT JOIN M_PRODUCT ON FACT_ACCT.M_PRODUCT_ID = M_PRODUCT.M_PRODUCT_ID
              LEFT JOIN C_PROJECT ON FACT_ACCT.C_PROJECT_ID = C_PROJECT.C_PROJECT_ID
            WHERE (?='Y' OR FACT_ACCT.ACCOUNT_ID IN (
                      SELECT c_elementvalue_id as name
                      FROM C_ELEMENTVALUE
                      WHERE value >= (  select value from c_elementvalue where c_elementvalue_id = ?)
                        and value <= (  select value from c_elementvalue where c_elementvalue_id = ?)
                        and c_elementvalue.ELEMENTLEVEL = 'S'
                    ))
              AND FACT_ACCT.AD_ORG_ID IN ('1')
              AND FACT_ACCT.AD_CLIENT_ID IN ('1')
              AND 1=1
              AND  FACT_ACCT.AD_ORG_ID IN ('2')
              AND 2=2
              AND 3=3) D
            WHERE 6=6
            GROUP BY groupbyname, groupbyid, VALUE, NAME, ID,
            DATEACCT, FACTACCTTYPE, FACT_ACCT_GROUP_ID, DESCRIPTION, ISDEBIT
            HAVING SUM(AMTACCTDR) - SUM(AMTACCTCR) <> 0
            ORDER  BY groupbyname, groupbyid, VALUE, NAME, ID,
            DATEACCT, FACTACCTTYPE, FACT_ACCT_GROUP_ID,  FACT_ACCT_ID, DESCRIPTION, ISDEBIT
          ) C
        ) B WHERE 1=1
      ]]></Sql>
    <Field name="rownum" value="count"/>
    <Parameter name="rownum" type="replace" optional="true" after="FROM ( SELECT " text="'0'" />
    <Parameter name="groupbytext"/>
    <Parameter name="groupby"/>
    <Parameter name="groupby"/>
    <Parameter name="allaccounts"/>
    <Parameter name="accountFrom"/>
    <Parameter name="accountTo"/>
    <Parameter name="adUserOrg" type="replace" optional="true" after="AND FACT_ACCT.AD_ORG_ID IN (" text="'1'"/>
    <Parameter name="adUserClient" type="replace" optional="true" after="AND FACT_ACCT.AD_CLIENT_ID IN (" text="'1'"/>
    <Parameter name="acctschema" optional="true" after="AND 1=1"><![CDATA[AND FACT_ACCT.C_ACCTSCHEMA_ID = ? ]]></Parameter>
    <Parameter name="parDateFrom2" optional="true" after="AND 1=1"><![CDATA[AND FACT_ACCT.DATEACCT >= TO_DATE(?) ]]></Parameter>
    <Parameter name="parDateTo2" optional="true" after="AND 1=1"><![CDATA[AND FACT_ACCT.DATEACCT < TO_DATE(?) ]]></Parameter>
    <Parameter name="org" type="replace" optional="true" after="AND  FACT_ACCT.AD_ORG_ID IN (" text="'2'"/>
    <Parameter name="cBpartnerId" optional="true" type="argument" after="AND 2=2"><![CDATA[ AND FACT_ACCT.C_BPARTNER_ID IN]]></Parameter>
    <Parameter name="mProductId" optional="true" type="argument" after="AND 2=2"><![CDATA[ AND FACT_ACCT.M_PRODUCT_ID IN]]></Parameter>
    <Parameter name="cProjectId" optional="true" type="argument" after="AND 2=2"><![CDATA[ AND FACT_ACCT.C_PROJECT_ID IN]]></Parameter>
    <Parameter name="paramAmtFrom" optional="true" after="3=3"><![CDATA[ AND (FACT_ACCT.AMTACCTDR + FACT_ACCT.AMTACCTCR)>=TO_NUMBER(?) ]]></Parameter>
    <Parameter name="paramAmtTo" optional="true" after="3=3"><![CDATA[ AND (FACT_ACCT.AMTACCTDR + FACT_ACCT.AMTACCTCR)<=TO_NUMBER(?) ]]></Parameter>
    <Parameter name="accountId" optional="true" after="WHERE 6=6"><![CDATA[AND ID = ? ]]></Parameter>
    <Parameter name="cBPartner" optional="true" after="WHERE 6=6"><![CDATA[AND groupbyid = ? ]]></Parameter>
    <Parameter name="pgLimit" type="argument" optional="true" after=",  FACT_ACCT_ID, DESCRIPTION, ISDEBIT"><![CDATA[ LIMIT ]]></Parameter>
    <Parameter name="oraLimit1" type="argument" optional="true" after=") C"><![CDATA[ WHERE ROWNUM <= ]]></Parameter>
    <Parameter name="oraLimit2" type="argument" optional="true" after="WHERE 1=1"><![CDATA[ AND RN1 BETWEEN ]]></Parameter>
    <Parameter name="factAcctId" optional="true" after="WHERE 1=1"><![CDATA[ and to_char(DATEACCT,'J')||FACTACCTTYPE||FACT_ACCT_GROUP_ID||FACT_ACCT_ID < ? ]]></Parameter>
  </SqlMethod>

  <SqlMethod name="selectXLS2" type="preparedStatement" return="scrollable">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
      <![CDATA[
      SELECT VALUE, NAME, DATEACCT,
          COALESCE(SUM(AMTACCTDR),0) AS AMTACCTDR, COALESCE(SUM(AMTACCTCR),0) AS AMTACCTCR,
          FACT_ACCT_GROUP_ID, ID, bpid, bpname, pdid, pdname, pjid, pjname,
          DESCRIPTION, FACTACCTTYPE
      FROM
        (SELECT FACT_ACCT.ACCTVALUE AS VALUE, COALESCE(ev_trl.NAME, ev.NAME) AS NAME,
            DATEACCT, AMTACCTDR, AMTACCTCR,
            FACT_ACCT_GROUP_ID, FACT_ACCT.ACCOUNT_ID AS ID, FACT_ACCT.DESCRIPTION,
            c_bpartner.c_bpartner_id as bpid, m_product.m_product_id as pdid, c_project.c_project_id as pjid,
            (select name from c_bpartner b where b.c_bpartner_id = c_bpartner.c_bpartner_id) as bpname, 
            (select value || ' - ' || name from m_product p where p.m_product_id = m_product.m_product_id) as pdname, 
            (select value || ' - ' || name from c_project pj where pj.c_project_id = c_project.c_project_id)  as pjname,
            CASE WHEN (AMTACCTDR > 0 AND AMTACCTCR = 0) OR (AMTACCTCR < 0 AND AMTACCTDR = 0) THEN 'Y' ELSE 'N' END AS ISDEBIT,
            CASE WHEN FACT_ACCT.FACTACCTTYPE = 'O' THEN 1 ELSE (CASE WHEN FACT_ACCT.FACTACCTTYPE = 'N' THEN 2 ELSE (CASE WHEN FACT_ACCT.FACTACCTTYPE = 'R' THEN 3 ELSE (CASE WHEN FACT_ACCT.FACTACCTTYPE = 'C' THEN 4 END) END) END) END AS FACTACCTTYPE
        FROM FACT_ACCT
          LEFT JOIN C_BPARTNER ON FACT_ACCT.C_BPARTNER_ID = C_BPARTNER.C_BPARTNER_ID
          LEFT JOIN M_PRODUCT ON FACT_ACCT.M_PRODUCT_ID = M_PRODUCT.M_PRODUCT_ID
          LEFT JOIN C_PROJECT ON FACT_ACCT.C_PROJECT_ID = C_PROJECT.C_PROJECT_ID
          LEFT JOIN c_elementvalue ev ON FACT_ACCT.ACCOUNT_ID = ev.c_elementvalue_id
              LEFT JOIN c_elementvalue_trl ev_trl ON ev.c_elementvalue_id = ev_trl.c_elementvalue_id AND ev_trl.ad_language = ?
        WHERE (?='Y' OR FACT_ACCT.ACCOUNT_ID IN (
                  SELECT c_elementvalue_id as name
                  FROM C_ELEMENTVALUE
                  WHERE value >= (  select value from c_elementvalue where c_elementvalue_id = ?)
                    and value <= (  select value from c_elementvalue where c_elementvalue_id = ?)
                    and c_elementvalue.ELEMENTLEVEL = 'S'
                ))
          AND FACT_ACCT.AD_ORG_ID IN ('1')
          AND FACT_ACCT.AD_CLIENT_ID IN ('1')
          AND 1=1
          AND  FACT_ACCT.AD_ORG_ID IN ('2')
          AND 2=2
          AND 3=3) D
        WHERE 6=6
        GROUP BY VALUE, NAME, ID, FACTACCTTYPE, DATEACCT, FACT_ACCT_GROUP_ID, description, bpname, bpid, pdname, pdid, pjname, pjid, ISDEBIT
        HAVING SUM(AMTACCTDR) - SUM(AMTACCTCR) <> 0
        ORDER BY VALUE, NAME, ID, DATEACCT, FACTACCTTYPE, FACT_ACCT_GROUP_ID, description,  bpname, bpid, pdname, pdid, pjname, pjid, ISDEBIT
      ]]></Sql>
   <Field name="rownum" value="count"/>
    <Parameter name="adLanguage"/>
    <Parameter name="allaccounts"/>
    <Parameter name="accountFrom"/>
    <Parameter name="accountTo"/>
    <Parameter name="adUserOrg" type="replace" optional="true" after="AND FACT_ACCT.AD_ORG_ID IN (" text="'1'"/>
    <Parameter name="adUserClient" type="replace" optional="true" after="AND FACT_ACCT.AD_CLIENT_ID IN (" text="'1'"/>
    <Parameter name="dateBalanced" optional="true" after="AND 1=1"><![CDATA[AND (FACT_ACCT.DATEBALANCED IS NULL OR FACT_ACCT.DATEBALANCED > TO_DATE(?)) ]]></Parameter>
    <Parameter name="acctschema" optional="true" after="AND 1=1"><![CDATA[AND FACT_ACCT.C_ACCTSCHEMA_ID = ? ]]></Parameter>
    <Parameter name="parDateFrom2" optional="true" after="AND 1=1"><![CDATA[AND FACT_ACCT.DATEACCT >= TO_DATE(?) ]]></Parameter>
    <Parameter name="parDateTo2" optional="true" after="AND 1=1"><![CDATA[AND FACT_ACCT.DATEACCT < TO_DATE(?) ]]></Parameter>
    <Parameter name="org" type="replace" optional="true" after="AND  FACT_ACCT.AD_ORG_ID IN (" text="'2'"/>
    <Parameter name="cBpartnerId" optional="true" type="argument" after="AND 2=2"><![CDATA[ AND FACT_ACCT.C_BPARTNER_ID IN]]></Parameter>
    <Parameter name="mProductId" optional="true" type="argument" after="AND 2=2"><![CDATA[ AND FACT_ACCT.M_PRODUCT_ID IN]]></Parameter>
    <Parameter name="cProjectId" optional="true" type="argument" after="AND 2=2"><![CDATA[ AND FACT_ACCT.C_PROJECT_ID IN]]></Parameter>
    <Parameter name="paramAmtFrom" optional="true" after="3=3"><![CDATA[ AND (FACT_ACCT.AMTACCTDR + FACT_ACCT.AMTACCTCR)>=TO_NUMBER(?) ]]></Parameter>
    <Parameter name="paramAmtTo" optional="true" after="3=3"><![CDATA[ AND (FACT_ACCT.AMTACCTDR + FACT_ACCT.AMTACCTCR)<=TO_NUMBER(?) ]]></Parameter>
  </SqlMethod>

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment></SqlMethodComment>
      <Sql></Sql>
  </SqlMethod>

  <SqlMethod name="selectCompany" type="preparedStatement" return="string" default="0">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
    <![CDATA[
        SELECT NAME
        FROM AD_CLIENT
        WHERE AD_CLIENT_ID = ?
      ]]></Sql>
    <Parameter name="client"/>
  </SqlMethod>

  <SqlMethod name="selectOrganization" type="preparedStatement" return="string" default="0">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
    <![CDATA[
        SELECT NAME
        FROM AD_ORG
        WHERE AD_ORG_ID = ?
      ]]></Sql>
    <Parameter name="org"/>
  </SqlMethod>

  <SqlMethod name="selectTotal2" type="preparedStatement" return="multiple">
      <SqlMethodComment></SqlMethodComment>
      <Sql><![CDATA[
      SELECT COALESCE(SUM(AMTACCTDR),0) AS TOTALACCTDR, COALESCE(SUM(AMTACCTCR),0) AS TOTALACCTCR,
      COALESCE(SUM(AMTACCTDR-AMTACCTCR),0) AS TOTAL
      FROM FACT_ACCT
      WHERE 1=1
      AND FACT_ACCT.ACCOUNT_ID = ?
      AND DATEACCT < TO_DATE(?)
      AND FACT_ACCT.AD_ORG_ID IN ('1')
      ]]></Sql>
      <Parameter name="bpartner" optional="true" type="argument" after="1=1"><![CDATA[ AND FACT_ACCT.C_BPARTNER_ID IN]]></Parameter>
      <Parameter name="bpartnerNULL" optional="true" type="argument" after="1=1"><![CDATA[ AND FACT_ACCT.C_BPARTNER_ID IS NULL]]></Parameter>
      <Parameter name="product" optional="true" type="argument" after="1=1"><![CDATA[ AND FACT_ACCT.M_PRODUCT_ID IN]]></Parameter>
      <Parameter name="productNULL" optional="true" type="argument" after="1=1"><![CDATA[ AND FACT_ACCT.M_PRODUCT_ID IS NULL]]></Parameter>
      <Parameter name="project" optional="true" type="argument" after="1=1"><![CDATA[ AND FACT_ACCT.C_PROJECT_ID IN]]></Parameter>
      <Parameter name="projectNULL" optional="true" type="argument" after="1=1"><![CDATA[ AND FACT_ACCT.C_PROJECT_ID IS NULL]]></Parameter>
      <Parameter name="acctschema" optional="true" after="1=1"><![CDATA[ AND FACT_ACCT.C_ACCTSCHEMA_ID = ? ]]></Parameter>
      <Parameter name="account"/>
      <Parameter name="dateFrom" optional="true" after="ACCOUNT_ID = ?"><![CDATA[ AND DATEACCT >= TO_DATE(?) ]]></Parameter>
      <Parameter name="dateTo2"/>
      <Parameter name="orgs" type="replace" optional="true" after="AND FACT_ACCT.AD_ORG_ID IN (" text="'1'"/>
   </SqlMethod>
   
  <SqlMethod name="selectSubaccountDescription" type="preparedStatement" return="string">
    <SqlMethodComment></SqlMethodComment>
    <Sql><![CDATA[
      SELECT COALESCE(TO_CHAR(ev_trl.NAME), TO_CHAR(ev.NAME), '') AS NAME
      FROM C_ELEMENTVALUE ev
        LEFT JOIN C_ELEMENTVALUE_TRL ev_trl
          ON ev.C_ELEMENTVALUE_ID = ev_trl.C_ELEMENTVALUE_ID
          AND ev_trl.AD_LANGUAGE = ?
      WHERE
        ev.C_ELEMENTVALUE_ID = ?
    ]]></Sql>
    <Parameter name="adLanguage"/>
    <Parameter name="elementValueId"/>
  </SqlMethod>
</SqlClass>
